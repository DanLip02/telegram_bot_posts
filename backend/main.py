from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, CallbackQueryHandler
from dotenv import load_dotenv
import os
load_dotenv()


# –¢–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç @BotFather
BOT_TOKEN = os.getenv("API_TOKEN")

# –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –æ–¥–µ–∂–¥—É", callback_data="add_clothes")],
        [InlineKeyboardButton("üëî –ü–æ–¥–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑", callback_data="create_outfit")],
        [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    message =f"""
              –ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name} !\n–ü–æ–¥—Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã —Ö–æ—Ç–µ–ª –±—ã —Å–¥–µ–ª–∞—Ç—å ? 
              """
    await update.message.reply_text(message, reply_markup=reply_markup)

# –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /add
async def add_clothes(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üëï –í–µ—Ä—Ö", callback_data="clothes_top")],
        [InlineKeyboardButton("üëñ –ù–∏–∑", callback_data="clothes_bottom")],
        [InlineKeyboardButton("üëü –û–±—É–≤—å", callback_data="clothes_shoes")],
        [InlineKeyboardButton("üß£ –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã", callback_data="clothes_accessories")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    message = "–ö–∞–∫—É—é –æ–¥–µ–∂–¥—É —Ç—ã —Ö–æ—Ç–µ–ª –±—ã –¥–æ–±–∞–≤–∏—Ç—å?"

    if update.callback_query:
        query = update.callback_query
        await query.edit_message_text(text=message, reply_markup=reply_markup)
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ /add
        await update.message.reply_text(message, reply_markup=reply_markup)
    # await update.message.reply_text(message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ

    data = query.data

    if data == "add_clothes":
        await add_clothes(update, context)
    elif data == "my_wardrobe":
        await query.edit_message_text("–í–æ—Ç —Ç–≤–æ–π —Ç–µ–∫—É—â–∏–π –≥–∞—Ä–¥–µ—Ä–æ–±...")
    elif data == "create_outfit":
        await query.edit_message_text("–ü–æ–¥–±–∏—Ä–∞—é –æ–±—Ä–∞–∑ –¥–ª—è –≤–∞—Å...")
    elif data == "clothes_top":
        await query.edit_message_text("–í—ã –≤—ã–±—Ä–∞–ª–∏: –í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞. –û–ø–∏—à–∏—Ç–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ:")
    elif data == "clothes_bottom":
        await query.edit_message_text("–í—ã –≤—ã–±—Ä–∞–ª–∏: –ù–∏–∂–Ω—è—è –æ–¥–µ–∂–¥–∞. –û–ø–∏—à–∏—Ç–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ:")
    elif data == "back_to_main":
        await start_from_callback(update, context)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ callback
async def start_from_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –æ–¥–µ–∂–¥—É", callback_data="add_clothes")],
        [InlineKeyboardButton("üëî –ü–æ–¥–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑", callback_data="create_outfit")],
        [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    message = f"""
                  –ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name} !\n–ü–æ–¥—Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã —Ö–æ—Ç–µ–ª –±—ã —Å–¥–µ–ª–∞—Ç—å ? 
                  """
    await update.callback_query.edit_message_text(
        message,
        reply_markup=reply_markup
    )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω
    application = ApplicationBuilder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("add", add_clothes))
    application.add_handler(CallbackQueryHandler(button_handler))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (–æ–Ω –±—É–¥–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å —Å–µ—Ä–≤–µ—Ä—ã Telegram)
    application.run_polling()

if __name__ == '__main__':
    main()